{"version":3,"sources":["Modules/Home.js","App.js","reportWebVitals.js","index.js"],"names":["temperature","city","Home","useState","error","setErr","hasEntered","setEntered","location","setLocation","maxTemperature","setMaxTemperature","minTemperature","setMinTemperature","weather","setWeather","temperatureRounding","temp","Math","round","className","id","onClick","src","rel","href","type","placeholder","onChange","e","target","value","Axios","get","then","response","data","main","name","temp_max","temp_min","description","catch","err","console","log","setTimeout","App","link","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mLAIIA,EACAC,E,sGAmFWC,EAjFF,WACX,MAAsBC,mBAAS,IAA/B,mBAAKC,EAAL,KAAYC,EAAZ,KACA,EAA+BF,oBAAS,GAAxC,mBAAKG,EAAL,KAAiBC,EAAjB,KACA,EAA8BJ,mBAAS,IAAvC,mBAAKK,EAAL,KAAeC,EAAf,KACA,EAA0CN,qBAA1C,mBAAKO,EAAL,KAAqBC,EAArB,KACA,EAA0CR,qBAA1C,mBAAKS,EAAL,KAAqBC,EAArB,KACA,EAA4BV,qBAA5B,mBAAKW,EAAL,KAAcC,EAAd,KA+BMC,EAAsB,SAACC,GAG3B,OAFAA,GAAQ,OACRA,EAAOC,KAAKC,MAAMF,IAIpB,OAAIX,EAEA,sBAAKc,UAAU,OAAf,UACE,qBAAKC,GAAG,MAAR,SACE,qBACEC,QAdS,WACjBf,EAAYD,GAAa,IAcjBiB,IAAI,qEAIR,oBAAIF,GAAG,WAAP,SAAmBb,IACnB,oBAAIa,GAAG,OAAP,mBAAkBrB,EAAlB,WACA,oBAAIqB,GAAG,MAAP,SAAcP,IACd,mBAAGO,GAAG,UAAN,mBAAoBX,EAApB,iBAAwCE,EAAxC,cAKF,sBAAKQ,UAAU,OAAf,UACE,sBAAMI,IAAI,aAAaC,KAAK,iCAC5B,6CACA,oBAAIJ,GAAG,IAAP,uCACA,mBAAGA,GAAG,QAAN,SAAejB,IACf,uBACEsB,KAAK,OACLC,YAAY,gBACZN,GAAG,aACHO,SA/DW,SAACC,GAClB5B,EAAO4B,EAAEC,OAAOC,SAgEZ,qBAAKX,UAAU,MAAf,SACE,wBAAQE,QA/DH,WACXU,IAAMC,IAAN,2DACsDhC,EADtD,4CAGGiC,MAAK,SAACC,GACLnC,EAAcgB,EAAoBmB,EAASC,KAAKC,KAAKpB,MACrDV,EAAYD,GAAa,GACzBG,EAAaD,EAAW2B,EAASC,KAAKE,MACtC3B,EACGD,EAAiBM,EAAoBmB,EAASC,KAAKC,KAAKE,WAE3D1B,EACGD,EAAiBI,EAAoBmB,EAASC,KAAKC,KAAKG,WAE3DzB,EAAYD,EAAUqB,EAASC,KAAKtB,QAAQ,GAAG2B,gBAEhDC,OAAM,SAACC,GACNC,QAAQC,IAAIF,GACZtC,EAAQD,EAAQ,4BAChB0C,YAAW,WACTzC,EAAQD,EAAQ,OACf,SA0CD,sBAEF,qBAAKiB,GAAG,oBClED0B,MAZf,WACE,OACE,qBAAK3B,UAAU,MAAf,SACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAO4B,KAAK,IAAIC,OAAK,EAACC,UAAWhD,WCG5BiD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBnB,MAAK,YAAkD,IAA/CoB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.33c70903.chunk.js","sourcesContent":["import Axios from \"axios\";\r\nimport { React, useState } from \"react\";\r\nimport \"./Home.css\";\r\n\r\nlet temperature;\r\nlet city;\r\n\r\nconst Home = () => {\r\n  let [error, setErr] = useState(\"\");\r\n  let [hasEntered, setEntered] = useState(false);\r\n  let [location, setLocation] = useState(\"\");\r\n  let [maxTemperature, setMaxTemperature] = useState();\r\n  let [minTemperature, setMinTemperature] = useState();\r\n  let [weather, setWeather] = useState();\r\n  const CityChange = (e) => {\r\n    city = e.target.value;\r\n  };\r\n  const Send = () => {\r\n    Axios.get(\r\n      `http://api.openweathermap.org/data/2.5/weather?q=${city}&appid=a0fe58708e6d694a289790f09cf8e633`\r\n    )\r\n      .then((response) => {\r\n        temperature = temperatureRounding(response.data.main.temp);\r\n        setEntered((hasEntered = true));\r\n        setLocation((location = response.data.name));\r\n        setMaxTemperature(\r\n          (maxTemperature = temperatureRounding(response.data.main.temp_max))\r\n        );\r\n        setMinTemperature(\r\n          (minTemperature = temperatureRounding(response.data.main.temp_min))\r\n        );\r\n        setWeather((weather = response.data.weather[0].description));\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setErr((error = \"Sorry there was an error\"));\r\n        setTimeout(() => {\r\n          setErr((error = \" \"));\r\n        }, 5000);\r\n      });\r\n  };\r\n  const backToHome = () => {\r\n    setEntered((hasEntered = false));\r\n  };\r\n  const temperatureRounding = (temp) => {\r\n    temp -= 273.15;\r\n    temp = Math.round(temp);\r\n    return temp;\r\n  };\r\n\r\n  if (hasEntered) {\r\n    return (\r\n      <div className=\"home\">\r\n        <div id=\"bar\">\r\n          <img\r\n            onClick={backToHome}\r\n            src=\"https://img.icons8.com/pastel-glyph/64/000000/circled-left.png\"\r\n          />\r\n        </div>\r\n\r\n        <h1 id=\"location\">{location}</h1>\r\n        <h1 id=\"temp\">{`${temperature}C°`}</h1>\r\n        <h2 id=\"max\">{weather}</h2>\r\n        <p id=\"max-min\">{`${maxTemperature}C°|${minTemperature}C°`}</p>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"home\">\r\n        <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\r\n        <h1>Weather App</h1>\r\n        <h1 id=\"p\">Please enter a city Below</h1>\r\n        <p id=\"error\">{error}</p>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter City...\"\r\n          id=\"enter_city\"\r\n          onChange={CityChange}\r\n        ></input>\r\n        <div className=\"btn\">\r\n          <button onClick={Send}>SEARCH</button>\r\n        </div>\r\n        <div id=\"placehoader\"></div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Home;\r\n","import \"./App.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Home from \"./Modules/Home\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route link=\"/\" exact component={Home} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}